// Generated by CoffeeScript 1.10.0
(function() {
  var PianoKey2D, PianoKeyboard2D;

  PianoKey2D = (function() {
    function PianoKey2D(design, note, context1, draw, scale) {
      var Black, KeyType, blackKeyColor, blackKeyHeight, blackKeyLength, blackKeyPosY, blackKeyPosZ, blackKeyWidth, keyCenterPosX, keyDip, keyInfo, keyType, keyUpSpeed, ref, whiteKeyColor, whiteKeyHeight, whiteKeyLength, whiteKeyWidth;
      this.context = context1;
      blackKeyWidth = design.blackKeyWidth, blackKeyHeight = design.blackKeyHeight, blackKeyLength = design.blackKeyLength, blackKeyColor = design.blackKeyColor, whiteKeyWidth = design.whiteKeyWidth, whiteKeyHeight = design.whiteKeyHeight, whiteKeyLength = design.whiteKeyLength, whiteKeyColor = design.whiteKeyColor, blackKeyPosY = design.blackKeyPosY, blackKeyPosZ = design.blackKeyPosZ, keyDip = design.keyDip, keyInfo = design.keyInfo, keyUpSpeed = design.keyUpSpeed, KeyType = design.KeyType;
      Black = KeyType.Black;
      ref = keyInfo[note], keyType = ref.keyType, keyCenterPosX = ref.keyCenterPosX;
      if (keyType === Black) {
        this.rectangle = {
          x: keyCenterPosX,
          y: 0,
          width: blackKeyWidth,
          height: blackKeyLength
        };
        this.color = 'black';
      } else {
        this.rectangle = {
          x: keyCenterPosX,
          y: 0,
          width: whiteKeyWidth,
          height: whiteKeyLength
        };
        this.color = 'white';
      }
      this.rectangle.x *= scale;
      this.rectangle.y *= scale;
      this.rectangle.width *= scale;
      this.rectangle.height *= scale;
      if (draw) {
        this.release();
      }
    }

    PianoKey2D.prototype.press = function() {
      this.context.fillStyle = "red";
      return this.context.fillRect(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);
    };

    PianoKey2D.isPressed = true;

    PianoKey2D.prototype.release = function() {
      this.context.fillStyle = this.color;
      return this.context.fillRect(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);
    };

    PianoKey2D.isPressed = false;

    return PianoKey2D;

  })();

  PianoKeyboard2D = (function() {
    function PianoKeyboard2D(design, noteToColor) {
      var canvas, context, i, key, note, ref, scale;
      this.keys = [];
      canvas = document.getElementById("keyboard-2D");
      canvas.setAttribute("width", $("body").width());
      context = canvas.getContext("2d");
      scale = 80;
      for (note = i = 0, ref = design.keyInfo.length; 0 <= ref ? i < ref : i > ref; note = 0 <= ref ? ++i : --i) {
        key = new PianoKey2D(design, note, context, (20 < note && note < 109), scale);
        this.keys.push(key);
      }
    }

    PianoKeyboard2D.prototype.press = function(note) {
      return this.keys[note].press();
    };

    PianoKeyboard2D.prototype.release = function(note) {
      return this.keys[note].release();
    };

    return PianoKeyboard2D;

  })();

  this.PianoKeyboard2D = PianoKeyboard2D;

}).call(this);
